{"version":3,"file":"index.js","sources":["../../src/node/locales.ts","../../src/node/prepareClientConfigFile.ts","../../src/node/utils/checkGitRepo.ts","../../src/node/utils/digestSHA256.ts","../../src/node/utils/getCommits.ts","../../src/node/utils/getContributorInfo.ts","../../src/node/utils/getUserNameWithNoreplyEmail.ts","../../src/node/utils/inferGitProvider.ts","../../src/node/utils/injectGitOptions.ts","../../src/node/resolveChangelog.ts","../../src/node/resolveContributors.ts","../../src/node/gitPlugin.ts"],"sourcesContent":["import type { DefaultLocaleInfo } from '@vuepress/helper'\nimport type { GitLocaleData } from '../shared/index.js'\n\nexport const gitLocaleInfo: DefaultLocaleInfo<GitLocaleData> = [\n  [\n    ['en', 'en-US'],\n    {\n      contributors: 'Contributors',\n      changelog: 'Changelog',\n      timeOn: 'on',\n      viewChangelog: 'View All Changelog',\n      latestUpdateAt: 'Last Updated:',\n    },\n  ],\n  [\n    ['zh', 'zh-CN', 'zh-Hans'],\n    {\n      contributors: '贡献者',\n      changelog: '更新日志',\n      timeOn: '于',\n      viewChangelog: '查看所有更新日志',\n      latestUpdateAt: '最近更新：',\n    },\n  ],\n  [\n    ['zh-TW', 'zh-Hant'],\n    {\n      contributors: '貢獻者',\n      changelog: '更新日誌',\n      timeOn: '於',\n      viewChangelog: '查看所有更新日誌',\n      latestUpdateAt: '最近更新：',\n    },\n  ],\n  [\n    ['de', 'de-DE'],\n    {\n      contributors: 'Mitwirkende',\n      changelog: 'Aenderungen',\n      timeOn: 'am',\n      viewChangelog: 'Alle Aenderungen anzeigen',\n      latestUpdateAt: 'Zuletzt aktualisiert:',\n    },\n  ],\n  [\n    ['de-AT'],\n    {\n      contributors: 'Mitwirkende',\n      changelog: 'Aenderungen',\n      timeOn: 'am',\n      viewChangelog: 'Alle Aenderungen anzeigen',\n      latestUpdateAt: 'Zuletzt aktualisiert:',\n    },\n  ],\n  [\n    ['vi', 'vi-VN'],\n    {\n      contributors: 'Người tham gia',\n      changelog: 'Lịch sử thay đổi',\n      timeOn: 'vào',\n      viewChangelog: 'Xem tất cả lịch sử thay đổi',\n      latestUpdateAt: 'Cập nhật gần nhất:',\n    },\n  ],\n  [\n    ['uk'],\n    {\n      contributors: 'Учасники',\n      changelog: 'Історія змін',\n      timeOn: 'в',\n      viewChangelog: 'Показати всю історію змін',\n      latestUpdateAt: 'Останнє оновлення:',\n    },\n  ],\n  [\n    ['ru', 'ru-RU'],\n    {\n      contributors: 'Участники',\n      changelog: 'История изменений',\n      timeOn: 'в',\n      viewChangelog: 'Показать всю историю изменений',\n      latestUpdateAt: 'Последнее обновление:',\n    },\n  ],\n  [\n    ['br'],\n    {\n      contributors: 'Colaboradores',\n      changelog: 'Log de Alterações',\n      timeOn: 'em',\n      viewChangelog: 'Ver todas as Alterações',\n      latestUpdateAt: 'Atualizado em:',\n    },\n  ],\n  [\n    ['pl', 'pl-PL'],\n    {\n      contributors: 'Współpracownicy',\n      changelog: 'Zmiany',\n      timeOn: 'w',\n      viewChangelog: 'Zobacz wszystkie zmiany',\n      latestUpdateAt: 'Ostatnio zaktualizowano:',\n    },\n  ],\n  [\n    ['sk', 'sk-SK'],\n    {\n      contributors: 'Pracovnici',\n      changelog: 'Zmeny',\n      timeOn: 'na',\n      viewChangelog: 'Zobrazit vsetky zmeny',\n      latestUpdateAt: 'Poslednou aktualizaciu:',\n    },\n  ],\n  [\n    ['fr', 'fr-FR'],\n    {\n      contributors: 'Contribueurs',\n      changelog: 'Historique des modifications',\n      timeOn: 'le',\n      viewChangelog: \"Voir l'historique des modifications\",\n      latestUpdateAt: 'Dernière mise à jour:',\n    },\n  ],\n  [\n    ['es', 'es-ES'],\n    {\n      contributors: 'Colaboradores',\n      changelog: 'Historial de cambios',\n      timeOn: 'el',\n      viewChangelog: 'Ver el historial de cambios',\n      latestUpdateAt: 'Actualizado el:',\n    },\n  ],\n  [\n    ['ja', 'ja-JP'],\n    {\n      contributors: '貢献者',\n      changelog: '変更履歴',\n      timeOn: '日',\n      viewChangelog: '全ての変更履歴を表示',\n      latestUpdateAt: '最終更新:',\n    },\n  ],\n  [\n    ['tr', 'tr-TR'],\n    {\n      contributors: 'Katkıda bulunanlar',\n      changelog: 'Düzenleme Girişimleri',\n      timeOn: 'de',\n      viewChangelog: 'Tüm düzenleme girişimlerini göster',\n      latestUpdateAt: 'Son günceleme:',\n    },\n  ],\n  [\n    ['ko', 'ko-KO'],\n    {\n      contributors: '기업자',\n      changelog: '변경 기록',\n      timeOn: '에서',\n      viewChangelog: '변경 기록 별 상세 내용 바보기',\n      latestUpdateAt: '최근 수정:',\n    },\n  ],\n  [\n    ['fi', 'fi-FI'],\n    {\n      contributors: 'Osallistujat',\n      changelog: 'Muutokset',\n      timeOn: 'kun',\n      viewChangelog: 'Näytä kaikki muutokset',\n      latestUpdateAt: 'Viimeksi paivittynyt:',\n    },\n  ],\n  [\n    ['hu', 'hu-HU'],\n    {\n      contributors: 'Szerkesztők',\n      changelog: 'Modosítások',\n      timeOn: 'ben',\n      viewChangelog: 'Minden modosítás megtekintése',\n      latestUpdateAt: 'Legutóbb frissítés:',\n    },\n  ],\n  [\n    ['id', 'id-ID'],\n    {\n      contributors: 'Pembuat',\n      changelog: 'Perubahan',\n      timeOn: 'pada',\n      viewChangelog: 'Lihat semua perubahan',\n      latestUpdateAt: 'Diperbarui terakhir:',\n    },\n  ],\n  [\n    ['nl', 'nl-NL'],\n    {\n      contributors: 'Bijdragers',\n      changelog: 'Wijzigingen',\n      timeOn: 'op',\n      viewChangelog: 'Bekijk alle wijzigingen',\n      latestUpdateAt: 'Laatst bijgewerkt:',\n    },\n  ],\n]\n","import type { App } from 'vuepress'\nimport { ensureEndingSlash } from 'vuepress/shared'\nimport { getDirname, path } from 'vuepress/utils'\nimport type { GitPluginOptions } from './options.js'\n\nconst { url } = import.meta\n\nconst __dirname = getDirname(url)\n\nconst CLIENT_FOLDER = ensureEndingSlash(path.resolve(__dirname, '../client'))\n\nexport const prepareClientConfigFile = (\n  app: App,\n  { changelog, contributors }: GitPluginOptions,\n): Promise<string> => {\n  const imports = new Set<string>()\n  const enhances = new Set<string>()\n\n  if (contributors ?? true) {\n    imports.add(\n      `import { GitContributors } from \"${CLIENT_FOLDER}components/GitContributors.js\";`,\n    )\n    enhances.add(`app.component(\"GitContributors\", GitContributors);`)\n  }\n\n  if (changelog) {\n    imports.add(\n      `import { GitChangelog } from \"${CLIENT_FOLDER}components/GitChangelog.js\";`,\n    )\n    enhances.add(`app.component(\"GitChangelog\", GitChangelog);`)\n  }\n\n  return app.writeTemp(\n    'git/config.js',\n    `\\\n${Array.from(imports.values()).join('\\n')}\n\nexport default {\n  enhance: ({ app }) => {\n${Array.from(enhances.values())\n  .map((line) => `    ${line}`)\n  .join('\\n')}\n  },\n};\n`,\n  )\n}\n","import { execaCommandSync } from 'execa'\n\n/**\n * Check if the git repo is valid\n */\nexport const checkGitRepo = (cwd: string): boolean => {\n  try {\n    execaCommandSync('git status', { cwd })\n    return true\n  } catch {\n    return false\n  }\n}\n","import { createHash } from 'node:crypto'\n\nexport const digestSHA256 = (message: string): string => {\n  const hash = createHash('sha256')\n  hash.update(message)\n\n  return hash.digest('hex')\n}\n","import { execa } from 'execa'\nimport type { GitContributorInfo } from '../../shared/index.js'\nimport type { GitPluginOptions } from '../options.js'\nimport type { MergedRawCommit, RawCommit } from '../typings.js'\n\nconst SPLIT_CHAR = '[GIT_LOG_COMMIT_END]'\nconst RE_SPLIT = /\\[GIT_LOG_COMMIT_END\\]$/\n\nconst RE_CO_AUTHOR = /^ *Co-authored-by: ?([^<]*)<([^>]*)> */gim\n\nconst getCoAuthors = (\n  body: string,\n): Pick<GitContributorInfo, 'email' | 'name'>[] => {\n  if (!body) return []\n\n  return [...body.matchAll(RE_CO_AUTHOR)]\n    .map(([, name, email]) => ({\n      name: name.trim(),\n      email: email.trim(),\n    }))\n    .filter(Boolean)\n}\n\nconst getFormat = ({ contributors, changelog }: GitPluginOptions): string => {\n  // hash | _ | _ | author_date | _ | _ | _\n  if (!contributors && !changelog) return '%H|||%ad|||'\n  // hash | author_name | author_email | author_date | _ | _ | body\n  if (contributors && !changelog) return '%H|%an|%ae|%ad|||%b'\n  // hash | author_name | author_email | author_date | subject | ref | body\n  return '%H|%an|%ae|%ad|%s|%d|%b'\n}\n\n/**\n * Get raw commits\n *\n * ${commit_hash} ${author_name} ${author_email} ${author_date} ${subject} ${ref} ${body}\n *\n * @see {@link https://git-scm.com/docs/pretty-formats | documentation} for details.\n */\nexport const getRawCommits = async (\n  filepath: string,\n  cwd: string,\n  options: GitPluginOptions,\n): Promise<RawCommit[]> => {\n  const format = getFormat(options)\n  try {\n    const { stdout } = await execa(\n      'git',\n      [\n        'log',\n        '--max-count=-1',\n        `--format=${format}${SPLIT_CHAR}`,\n        '--date=unix',\n        '--follow',\n        '--',\n        filepath,\n      ],\n      { cwd },\n    )\n\n    return stdout\n      .replace(RE_SPLIT, '')\n      .split(`${SPLIT_CHAR}\\n`)\n      .filter(Boolean)\n      .map((rawString) => {\n        const [hash, author, email, time, message, refs, body] = rawString\n          .split('|')\n          .map((v) => v.trim())\n        return {\n          filepath,\n          hash,\n          time: Number.parseInt(time, 10) * 1000,\n          message,\n          body,\n          refs,\n          author,\n          email,\n          coAuthors: getCoAuthors(body),\n        }\n      })\n  } catch {\n    return []\n  }\n}\n\nexport const mergeRawCommits = (commits: RawCommit[]): MergedRawCommit[] => {\n  const commitMap = new Map<string, MergedRawCommit>()\n\n  commits.forEach(({ filepath, ...commit }) => {\n    const _commit = commitMap.get(commit.hash)\n    if (_commit) _commit.filepaths.push(filepath)\n    else commitMap.set(commit.hash, { filepaths: [filepath], ...commit })\n  })\n\n  const result = Array.from(commitMap.values())\n  return result\n}\n\nexport const getCommits = async (\n  filepaths: string[],\n  cwd: string,\n  options: GitPluginOptions,\n): Promise<MergedRawCommit[]> => {\n  const rawCommits = await Promise.all(\n    filepaths.map((filepath) => getRawCommits(filepath, cwd, options)),\n  )\n\n  return mergeRawCommits(rawCommits.flat()).sort((a, b) =>\n    b.time - a.time > 0 ? 1 : -1,\n  )\n}\n","import type { ContributorInfo } from '../options.js'\n\nconst toArray = <T = unknown>(value?: T | T[]): T[] =>\n  Array.isArray(value) ? value : value ? [value] : []\n\nexport const getContributorInfo = (\n  contributorName: string,\n  infos: ContributorInfo[] = [],\n): ContributorInfo | null =>\n  infos.find(\n    ({ username, alias }) =>\n      username === contributorName || toArray(alias).includes(contributorName),\n  ) ?? null\n","export const getUserNameWithNoreplyEmail = (email: string): string | null =>\n  email.endsWith('@users.noreply.github.com')\n    ? email.replace('@users.noreply.github.com', '').split('+')[1]\n    : null\n","import { execaCommandSync } from 'execa'\nimport type { KnownGitProvider } from '../../shared/index.js'\n\nexport const getRemoteUrl = (cwd: string): string => {\n  try {\n    const { stdout } = execaCommandSync('git remote get-url origin', { cwd })\n    return stdout\n  } catch {\n    try {\n      const { stdout } = execaCommandSync('git remote', { cwd })\n      const remote = stdout.split('\\n')[0]?.trim()\n      if (remote) {\n        const { stdout: remoteUrl } = execaCommandSync(\n          `git remote get-url ${remote}`,\n          {\n            cwd,\n          },\n        )\n        return remoteUrl\n      }\n      return ''\n    } catch {\n      return ''\n    }\n  }\n}\n\nexport const inferGitProvider = (cwd: string): KnownGitProvider | null => {\n  const remoteUrl = getRemoteUrl(cwd)\n\n  if (remoteUrl.includes('github.com')) {\n    return 'github'\n  }\n\n  if (remoteUrl.includes('gitlab.com')) {\n    return 'gitlab'\n  }\n\n  if (remoteUrl.includes('gitee.com')) {\n    return 'gitee'\n  }\n\n  if (remoteUrl.includes('bitbucket.org')) {\n    return 'bitbucket'\n  }\n\n  return null\n}\n","import { isPlainObject } from 'vuepress/shared'\nimport type {\n  GitInjectOptions,\n  GitUrlPattern,\n  KnownGitProvider,\n} from '../../shared/index.js'\nimport type { ChangelogOptions } from '../options.js'\n\nconst PATTERN_PRESET: Record<KnownGitProvider, GitUrlPattern> = {\n  github: {\n    issue: ':repo/issues/:issue',\n    tag: ':repo/releases/tag/:tag',\n    commit: ':repo/commit/:hash',\n  },\n  gitlab: {\n    issue: ':repo/-/issues/:issue',\n    tag: ':repo/-/releases/:tag',\n    commit: ':repo/-/commit/:hash',\n  },\n  gitee: {\n    issue: ':repo/issues/:issue',\n    tag: ':repo/releases/tag/:tag',\n    commit: ':repo/commit/:hash',\n  },\n  bitbucket: {\n    issue: ':repo/issues/:issue',\n    tag: ':repo/src/:hash',\n    commit: ':repo/commits/:hash',\n  },\n}\n\nconst getPattern = (\n  { commitUrlPattern, issueUrlPattern, tagUrlPattern }: ChangelogOptions,\n  provider: KnownGitProvider | null,\n): GitUrlPattern => {\n  const fallback = provider ? PATTERN_PRESET[provider] : {}\n\n  return {\n    commit: commitUrlPattern ?? fallback.commit,\n    issue: issueUrlPattern ?? fallback.issue,\n    tag: tagUrlPattern ?? fallback.tag,\n  }\n}\n\nexport const injectGitOptions = (\n  provider: KnownGitProvider | null,\n  changelog: ChangelogOptions | boolean,\n): GitInjectOptions => {\n  const data: GitInjectOptions = {\n    provider,\n  }\n  if (changelog) {\n    const changelogOptions = isPlainObject(changelog) ? changelog : {}\n    data.pattern = getPattern(changelogOptions, provider)\n    data.repo = changelogOptions.repoUrl\n  }\n\n  return data\n}\n","import type { App } from 'vuepress'\nimport type { GitChangelogInfo } from '../shared/index.js'\nimport type { ChangelogOptions, ContributorInfo } from './options.js'\nimport type { MergedRawCommit } from './typings.js'\nimport {\n  getContributorInfo,\n  getUserNameWithNoreplyEmail,\n} from './utils/index.js'\n\nconst RE_CLEAN_REFS = /[()]/g\n\nconst parseTagName = (refs: string): string | undefined => {\n  if (!refs) return\n\n  const tags = refs\n    .replace(RE_CLEAN_REFS, '')\n    .split(',')\n    .map((tag) => tag.trim())\n\n  return tags[0]?.includes('tag:') ? tags[0].replace('tag:', '').trim() : ''\n}\n\nexport const resolveChangelog = (\n  app: App,\n  commits: MergedRawCommit[],\n  options: ChangelogOptions,\n  contributors: ContributorInfo[],\n): GitChangelogInfo[] => {\n  const result: GitChangelogInfo[] = []\n\n  const sliceCommits = options.maxCount\n    ? commits.slice(0, options.maxCount)\n    : commits\n\n  for (const commit of sliceCommits) {\n    const { hash, message, time, author, email, refs, coAuthors } = commit\n    const tag = parseTagName(refs)\n    const contributor = getContributorInfo(\n      getUserNameWithNoreplyEmail(email) ?? author,\n      contributors,\n    )\n    const resolved: GitChangelogInfo = {\n      hash,\n      time,\n      email,\n      author: contributor?.name ?? contributor?.username ?? author,\n      message: app.markdown.renderInline(message),\n    }\n\n    if (coAuthors.length) resolved.coAuthors = coAuthors\n\n    if (tag) resolved.tag = tag\n\n    result.push(resolved)\n  }\n\n  return result\n}\n","import type { GitContributorInfo, KnownGitProvider } from '../shared/index.js'\nimport type { ContributorsOptions } from './options.js'\nimport type { MergedRawCommit } from './typings.js'\nimport {\n  digestSHA256,\n  getContributorInfo,\n  getUserNameWithNoreplyEmail,\n} from './utils/index.js'\n\nexport const getRawContributors = (\n  commits: MergedRawCommit[],\n  options: ContributorsOptions,\n  gitProvider: KnownGitProvider | null,\n): GitContributorInfo[] => {\n  const contributors = new Map<string, GitContributorInfo>()\n\n  // copy and reverse commits\n  for (const commit of [...commits].reverse()) {\n    const authors = [\n      { name: commit.author, email: commit.email },\n      ...commit.coAuthors,\n    ]\n\n    for (const { name: author, email } of authors) {\n      const config = getContributorInfo(\n        getUserNameWithNoreplyEmail(email) ?? author,\n        options.info,\n      )\n      const username = config?.username ?? author\n      const name = config?.name ?? username\n\n      const contributor = contributors.get(name + email)\n\n      if (contributor) {\n        contributor.commits++\n      } else {\n        const item: GitContributorInfo = {\n          name,\n          username,\n          email,\n          commits: 1,\n        }\n\n        if (options.avatar)\n          item.avatar =\n            config?.avatar ??\n            options.avatarPattern?.replace(':username', username) ??\n            (gitProvider === 'github'\n              ? `https://avatars.githubusercontent.com/${username}?v=4`\n              : `https://gravatar.com/avatar/${digestSHA256(email || username)}?d=retro`)\n\n        const url =\n          (config?.url ?? gitProvider === 'github')\n            ? `https://github.com/${username}`\n            : undefined\n        if (url) item.url = url\n\n        contributors.set(name + email, item)\n      }\n    }\n  }\n\n  return Array.from(contributors.values()).filter((item, index, self) => {\n    // If one of the contributors is a \"noreply\" email address, and there's\n    // already a contributor with the same name, it is very likely a duplicate,\n    // so it can be removed.\n    if (item.email.split('@')[1]?.match(/no-?reply/)) {\n      const realIndex = self.findIndex((t) => t.name === item.name)\n      if (realIndex !== index) {\n        // Update the \"real\" contributor to also include the noreply's commits\n        self[realIndex].commits += item.commits\n        return false\n      }\n      return true\n    }\n    return true\n  })\n}\n\nexport const resolveContributors = (\n  commits: MergedRawCommit[],\n  gitProvider: KnownGitProvider | null,\n  options: ContributorsOptions,\n  extraContributors: string[] = [],\n): GitContributorInfo[] => {\n  const contributors = getRawContributors(commits, options, gitProvider)\n\n  if (options.info?.length && extraContributors.length) {\n    for (const extraContributor of extraContributors) {\n      if (contributors.every((item) => item.name !== extraContributor)) {\n        const contributorInfo = getContributorInfo(\n          extraContributor,\n          options.info,\n        )\n\n        if (!contributorInfo) continue\n\n        const result: GitContributorInfo = {\n          name: contributorInfo.name ?? extraContributor,\n          username: contributorInfo.name ?? extraContributor,\n          email: '',\n          commits: 0,\n        }\n\n        const url =\n          contributorInfo.url ??\n          (gitProvider === 'github'\n            ? `https://github.com/${contributorInfo.username}`\n            : null)\n\n        if (options.avatar)\n          result.avatar =\n            contributorInfo.avatar ??\n            options.avatarPattern?.replace(\n              ':username',\n              contributorInfo.username,\n            ) ??\n            (gitProvider === 'github'\n              ? `https://avatars.githubusercontent.com/${contributorInfo.username}?v=4`\n              : `https://gravatar.com/avatar/${digestSHA256(contributorInfo.username)}?d=retro`)\n\n        if (url) result.url = url\n\n        contributors.push(result)\n      }\n    }\n  }\n\n  return options.transform?.(contributors) ?? contributors\n}\n","import { getFullLocaleConfig } from '@vuepress/helper'\nimport type { Page, Plugin } from 'vuepress/core'\nimport { isPlainObject } from 'vuepress/shared'\nimport { path } from 'vuepress/utils'\nimport type {\n  GitPluginFrontmatter,\n  GitPluginPageData,\n} from '../shared/index.js'\nimport { gitLocaleInfo } from './locales.js'\nimport type { GitPluginOptions } from './options.js'\nimport { prepareClientConfigFile } from './prepareClientConfigFile.js'\nimport { resolveChangelog } from './resolveChangelog.js'\nimport { resolveContributors } from './resolveContributors.js'\nimport {\n  checkGitRepo,\n  getCommits,\n  inferGitProvider,\n  injectGitOptions,\n} from './utils/index.js'\n\nexport const gitPlugin =\n  ({\n    createdTime = true,\n    updatedTime = true,\n    contributors = true,\n    changelog = false,\n    filter,\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    transformContributors,\n    locales = {},\n  }: GitPluginOptions = {}): Plugin =>\n  (app) => {\n    const name = '@vuepress/plugin-git'\n    const cwd = app.dir.source()\n    const isGitRepoValid = checkGitRepo(cwd)\n    const gitProvider = isGitRepoValid ? inferGitProvider(cwd) : null\n    return {\n      name,\n\n      define: {\n        __GIT_LOCALES__: getFullLocaleConfig({\n          app,\n          name,\n          default: gitLocaleInfo,\n          config: locales,\n        }),\n        __GIT_OPTIONS__: injectGitOptions(gitProvider, changelog),\n      },\n\n      extendsPage: async (\n        page: Page<GitPluginPageData, GitPluginFrontmatter>,\n      ) => {\n        page.data.git = {}\n\n        if (!isGitRepoValid || page.filePathRelative === null) {\n          return\n        }\n\n        if (filter && !filter(page)) return\n\n        const { frontmatter } = page\n\n        // skip if all features are disabled\n        if (\n          !(frontmatter.contributors ?? contributors) &&\n          !(frontmatter.changelog ?? changelog) &&\n          !createdTime &&\n          !updatedTime\n        ) {\n          return\n        }\n\n        const filePaths = [\n          page.filePathRelative,\n          ...(page.frontmatter.gitInclude ?? []).map((item) =>\n            path.join(page.filePathRelative, '..', item),\n          ),\n        ]\n\n        const commits = await getCommits(filePaths, cwd, {\n          contributors: (frontmatter.contributors ?? contributors) !== false,\n          changelog: frontmatter.changelog ?? changelog,\n        })\n\n        if (commits.length === 0) return\n\n        if (createdTime) {\n          page.data.git.createdTime = commits[commits.length - 1].time\n        }\n\n        if (updatedTime) {\n          page.data.git.updatedTime = commits[0].time\n        }\n\n        const contributorsOptions = isPlainObject(contributors)\n          ? contributors\n          : {}\n\n        if (frontmatter.contributors ?? contributors) {\n          contributorsOptions.transform ??= transformContributors\n          page.data.git.contributors = resolveContributors(\n            commits,\n            gitProvider,\n            contributorsOptions,\n            Array.isArray(frontmatter.contributors)\n              ? frontmatter.contributors\n              : [],\n          )\n        }\n\n        if (frontmatter.changelog ?? changelog) {\n          const changelogOptions = isPlainObject(changelog) ? changelog : {}\n\n          page.data.git.changelog = resolveChangelog(\n            app,\n            commits,\n            changelogOptions,\n            contributorsOptions.info ?? [],\n          )\n        }\n      },\n\n      // remove `gitInclude` from frontmatter\n      onInitialized: () => {\n        app.pages.forEach((page) => {\n          delete page.frontmatter.gitInclude\n        })\n      },\n\n      clientConfigFile: () =>\n        prepareClientConfigFile(app, { changelog, contributors }),\n    }\n  }\n"],"names":["gitLocaleInfo","url","__dirname","getDirname","CLIENT_FOLDER","ensureEndingSlash","path","prepareClientConfigFile","app","changelog","contributors","imports","enhances","line","checkGitRepo","cwd","execaCommandSync","digestSHA256","message","hash","createHash","SPLIT_CHAR","RE_SPLIT","RE_CO_AUTHOR","getCoAuthors","body","name","email","getFormat","getRawCommits","filepath","options","format","stdout","execa","rawString","author","time","refs","v","mergeRawCommits","commits","commitMap","commit","_commit","getCommits","filepaths","rawCommits","a","b","toArray","value","getContributorInfo","contributorName","infos","username","alias","getUserNameWithNoreplyEmail","getRemoteUrl","remote","remoteUrl","inferGitProvider","PATTERN_PRESET","getPattern","commitUrlPattern","issueUrlPattern","tagUrlPattern","provider","fallback","injectGitOptions","data","changelogOptions","isPlainObject","RE_CLEAN_REFS","parseTagName","tags","tag","resolveChangelog","result","sliceCommits","coAuthors","contributor","resolved","getRawContributors","gitProvider","authors","config","item","index","self","realIndex","t","resolveContributors","extraContributors","extraContributor","contributorInfo","gitPlugin","createdTime","updatedTime","filter","transformContributors","locales","isGitRepoValid","getFullLocaleConfig","page","frontmatter","filePaths","contributorsOptions"],"mappings":"iRAGO,MAAMA,EAAkD,CAC7D,CACE,CAAC,KAAM,OAAO,EACd,CACE,aAAc,eACd,UAAW,YACX,OAAQ,KACR,cAAe,qBACf,eAAgB,eAClB,CACF,EACA,CACE,CAAC,KAAM,QAAS,SAAS,EACzB,CACE,aAAc,MACd,UAAW,OACX,OAAQ,IACR,cAAe,WACf,eAAgB,OAClB,CACF,EACA,CACE,CAAC,QAAS,SAAS,EACnB,CACE,aAAc,MACd,UAAW,OACX,OAAQ,IACR,cAAe,WACf,eAAgB,OAClB,CACF,EACA,CACE,CAAC,KAAM,OAAO,EACd,CACE,aAAc,cACd,UAAW,cACX,OAAQ,KACR,cAAe,4BACf,eAAgB,uBAClB,CACF,EACA,CACE,CAAC,OAAO,EACR,CACE,aAAc,cACd,UAAW,cACX,OAAQ,KACR,cAAe,4BACf,eAAgB,uBAClB,CACF,EACA,CACE,CAAC,KAAM,OAAO,EACd,CACE,aAAc,oBACd,UAAW,wBACX,OAAQ,OACR,cAAe,sCACf,eAAgB,4BAClB,CACF,EACA,CACE,CAAC,IAAI,EACL,CACE,aAAc,WACd,UAAW,eACX,OAAQ,IACR,cAAe,4BACf,eAAgB,oBAClB,CACF,EACA,CACE,CAAC,KAAM,OAAO,EACd,CACE,aAAc,YACd,UAAW,oBACX,OAAQ,IACR,cAAe,iCACf,eAAgB,uBAClB,CACF,EACA,CACE,CAAC,IAAI,EACL,CACE,aAAc,gBACd,UAAW,oBACX,OAAQ,KACR,cAAe,0BACf,eAAgB,gBAClB,CACF,EACA,CACE,CAAC,KAAM,OAAO,EACd,CACE,aAAc,kBACd,UAAW,SACX,OAAQ,IACR,cAAe,0BACf,eAAgB,0BAClB,CACF,EACA,CACE,CAAC,KAAM,OAAO,EACd,CACE,aAAc,aACd,UAAW,QACX,OAAQ,KACR,cAAe,wBACf,eAAgB,yBAClB,CACF,EACA,CACE,CAAC,KAAM,OAAO,EACd,CACE,aAAc,eACd,UAAW,+BACX,OAAQ,KACR,cAAe,sCACf,eAAgB,uBAClB,CACF,EACA,CACE,CAAC,KAAM,OAAO,EACd,CACE,aAAc,gBACd,UAAW,uBACX,OA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"}